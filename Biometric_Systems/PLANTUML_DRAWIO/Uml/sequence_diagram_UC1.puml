@startuml
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60
skinparam sequenceParticipant underline

actor Prodigit
participant "Invia Notifiche" as A
participant "Notifica" as B
participant "Accesso Notifiche" as C
participant "Prenotazione" as D
actor Studente

Prodigit -> A: SendRequest(idStudente)
activate A

A -> B: Report(idStudente)
activate B

B -> C: Visualization
activate C

alt list not empty

    C --> Studente: allert notification
    activate Studente
    Studente --> C: Ack(value)
    deactivate Studente
    
    alt value is True
    
        C -> D: Prenotazione Accepted
        activate D
        D --> Studente: print("Prenotazione accepted")
        deactivate D
        deactivate C
    
    end

end

Studente --> Prodigit: Done
deactivate B
deactivate A

@enduml
